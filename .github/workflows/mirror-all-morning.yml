name: Morning Mirror — Full Workbook + Key CSVs

on:
  schedule:
    # 12:00 UTC = 08:00 America/Toronto on weekdays
    - cron: "0 12 * * 1-5"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: morning-mirror
  cancel-in-progress: false

jobs:
  mirror:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      SHEET_ID: ${{ secrets.SHEET_ID }}
      CONFIG_TABS: config/tabs.csv

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show UTC/Toronto time (for logs only)
        run: |
          echo "UTC:      $(date -u +%FT%TZ)"
          TZ=America/Toronto date "+Toronto: %Y-%m-%d %H:%M:%S %Z (%z)"

      - name: Ensure scripts are executable
        run: |
          chmod +x scripts/publish_tab.sh || true
          chmod +x scripts/publish_all_tabs.sh || true

      - name: Export config/tabs.csv from Google Sheets (TABS tab)
        env:
          SHEET_ID: ${{ secrets.SHEET_ID }}
          GID_TABS: ${{ secrets.GID_TABS }}
        run: |
          mkdir -p config
          curl -sSL \
            "https://docs.google.com/spreadsheets/d/${SHEET_ID}/export?format=csv&gid=${GID_TABS}" \
            -o config/tabs.csv
          echo "tabs.csv:"
          head -n 10 config/tabs.csv || true

      # OPTION A: Drive from config/tabs.csv (recommended)
      - name: Publish all tabs (from config/tabs.csv via helper)
        if: ${{ env.SHEET_ID != '' && hashFiles('config/tabs.csv') != '' && hashFiles('scripts/publish_all_tabs.sh') != '' }}
        run: |
          scripts/publish_all_tabs.sh \
            --sheet-id "${SHEET_ID}" \
            --branch "main" \
            --config "${CONFIG_TABS}"

      - name: Publish all tabs (inline loop; no publish_all_tabs.sh)
        if: ${{ env.SHEET_ID != '' && hashFiles('config/tabs.csv') != '' && hashFiles('scripts/publish_all_tabs.sh') == '' }}
        run: |
          while IFS=, read -r NAME GID REST; do
            # skip header
            [[ "$NAME" == "TabName" ]] && continue
            if [[ "$NAME" == H_* || "$NAME" == TA_* ]]; then
              scripts/publish_tab.sh \
                --sheet-id "${SHEET_ID}" \
                --tab-name "${NAME}" \
                --gid "${GID}" \
                --branch "main" \
                --incremental-days 30 \
                --date-col Date \
                --chunk-size 1000
            else
              scripts/publish_tab.sh \
                --sheet-id "${SHEET_ID}" \
                --tab-name "${NAME}" \
                --gid "${GID}" \
                --branch "main" \
                --chunk-size 600
            fi
          done < "${CONFIG_TABS}"

      # OPTION B: Fallback if tabs.csv isn’t available
      - name: Fallback — explicitly publish a few tabs (delete once config is used)
        if: ${{ env.SHEET_ID != '' && hashFiles('config/tabs.csv') == '' }}
        run: |
          scripts/publish_tab.sh \
            --sheet-id "${SHEET_ID}" \
            --tab-name "SCAN" \
            --gid "${{ secrets.GID_SCAN }}" \
            --branch "main" \
            --chunk-size 600
          # Example H_/TA_ (uncomment after adding secrets)
          # scripts/publish_tab.sh --sheet-id "${SHEET_ID}" --tab-name "H_XIU"  --gid "${{ secrets.GID_H_XIU }}"  --branch "main" --incremental-days 30 --date-col Date --chunk-size 1000
          # scripts/publish_tab.sh --sheet-id "${SHEET_ID}" --tab-name "TA_XIU" --gid "${{ secrets.GID_TA_XIU }}" --branch "main" --incremental-days 30 --date-col Date --chunk-size 1000

      - name: Commit & push artifacts
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add sheets/*.csv live/** || true
          git commit -m "Morning Mirror: publish per-page CSVs + /live artifacts" || echo "No changes"
          git push

      - name: Upload quick preview artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: live-previews
          path: |
            live/*/head.csv
            live/*/schema.json
          if-no-files-found: ignore
